;EJERCICIO 1

;funcion de creacion
(define (crearCancion titulo cantante año)
  (list
   (list 'titulo titulo)
   (list 'cantante cantante)
   (list 'año año)
   )
    
  ) 

;(crearCancion "Algorithm" "Muse" 2018)
;(crearCancion "Holiday" "Green Day" 2004)
;(crearCancion "Do I Wanna Know?" "Artic Monkeys" 2013)


;funciones de acceso
(define (ver-titulo cancion)
  (cadr (assoc 'titulo cancion))
)

;(ver-titulo (crearCancion "Algorithm" "Muse" 2018))

(define (ver-cantante cancion)
  (cadr (assoc 'cantante cancion))
)

;(ver-cantante (crearCancion "Algorithm" "Muse" 2018))

(define (ver-año cancion)
  (cadr (assoc 'año cancion))
)

;(ver-año (crearCancion "Algorithm" "Muse" 2018))


;funcion de consulta
(define (consultarCancion cancion)
  (display "Título: ")
  (display (ver-titulo cancion))
  (newline)
  (display "Cantante: ")
  (display (ver-cantante cancion))
  (newline)
  (display "Año: ")
  (display (ver-año cancion))
  (newline)
)

;(consultarCancion (crearCancion "Algorithm" "Muse" 2018))

;funciones de modificacion
(define (cambiar-titulo! cancion nuevo)
  (set-cdr!(assoc 'titulo cancion) (list nuevo))
  )

;(cambiar-titulo! (crearCancion "Algorithm" "Muse" 2018) "Pressure")

(define (cambiar-cantante! cancion nuevo)
  (set-cdr! (assoc 'cantante cancion) (list nuevo))
  )

;(cambiar-titulo! (crearCancion "Algorithm" "Muse" 2018) "Matt Bellamy")

(define (cambiar-año! cancion nuevo)
  (set-cdr! (assoc 'año cancion) (list nuevo))
  )

;(cambiar-titulo! (crearCancion "Algorithm" "Muse" 2018) "2019")


;EJERCICIO 2
(define (crear-discoteca )
  (list )
  )
;(crear-discoteca)

(define (discoteca-vacía? discoteca)
  (equal? discoteca '() )
  )
;(discoteca-vacía? (crear-discoteca) )







      
(define (intersec discoteca listaOrdenada lista)
  (if (= (length lista) (abs (- (length discoteca) (length listaOrdenada))))
      lista
      (if (= (ver-titulo (car discoteca)) (ver-titulo (car listaOrdenada)))
          ((cdr discoteca) (cdr listaOrdenada) (car discoteca))
          )
      )
  )
      
(define (cambiarMinimo minimo discoteca i)
  (if (> i (length discoteca))
      minimo
      (if (< (cdr (car minimo)) (cdr(car(list-ref discoteca (+ i 1)))))
          (cambiarMinimo minimo discoteca (+ i 0))
          (cambiarMinimo (cdr(car(list-ref discoteca (+ i 1)))) discoteca (+ i 1))
          )
      )
  )
                
                  
      
(define (insertar-canción! discoteca cancion)

  (define discoteca2 (cons discoteca2 cancion)) ;ERROR
  ;(display discoteca2)
  (do
      (;definicion de variables
       (i 0 (+ i 1))
       ;(minimoSiguiente (list-ref discoteca (+ i 1)) (list-ref discoteca (+ i 1)))
       (listaOrdenada (crear-discoteca) (cons (crearCancion (cdr (car (cambiarMinimo minimo discoteca2 i))) (cdr (car (cdr (cambiarMinimo minimo discoteca2 i)))) (cdr (cdr (cdr (cambiarMinimo minimo discoteca2 i)))))))
       (minimo (car discoteca2)       (crearCancion (cadr (assoc 'titulo (car (intersec discoteca2 listaOrdenada (crear-discoteca))))) (cadr (assoc 'cantante (car (intersec discoteca2 listaOrdenada)))) (cadr (assoc 'año (car (intersec discoteca2 listaOrdenada (crear-discoteca))))) ) )
       ;(listaOrdenada (crear-discoteca) (cons (crearCancion (cdr (car (cambiarMinimo minimo discoteca i))) (cdr (car (cdr (cambiarMinimo minimo discoteca i)))) (cdr (cdr (cdr (cambiarMinimo minimo discoteca i)))))))
   )
   ;condicion y sentencia de salida
    ( (= (length listaOrdenada) (length discoteca)) listaOrdenada)
    )
  )


        